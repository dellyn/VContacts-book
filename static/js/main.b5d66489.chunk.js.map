{"version":3,"sources":["components/Modal/index.js","components/Modal/Modal.js","components/ContactDetails/index.js","components/ContactDetails/ContactDetails.js","components/ContactListItem/index.js","components/ContactListItem/ContactListItem.js","components/ContactList/index.js","components/ContactList/ContactList.js","components/ContactAddForm/index.js","components/ContactAddForm/ContactAddForm.js","App.js","index.js"],"names":["Modal","active","setActive","children","className","onClick","e","stopPropagation","ContactDetails","userValueId","state","addItem","onAddItem","setState","onChangeHandler","userKeyField","target","value","name","setModalActive","statusActive","modalActive","addContactField","userValueField","id","props","addContactValue","deleteField","key","modalDeleteId","modalDeleteKey","hideDelMod","confirmDeleteFild","deleteÐ¡ontactValue","enterHandler","clearFields","editField","userKey","userValue","modalEditKey","modalEditUserKey","modalEditUserValue","modalEditId","confirmEditField","editContactValue","this","getContactData","storage","contactListItem","Object","keys","filter","item","map","type","placeholder","onChange","cancelLastChange","Component","ContactListItem","onDeleted","contactDetails","src","alt","firstName","lastName","ContactList","contacts","itemProps","ContactAddForm","phone","email","onContactAdded","contactValues","addContact","htmlFor","App","maxId","contactData","cancelBtn","contactValue","contactId","index","findIndex","el","operationElem","assign","slice","deleteContact","values","newContact","editedField","contactKeyField","contactValueField","undefined","operationArr","defineProperty","getOwnPropertyDescriptor","newContactData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5d66489.chunk.js","sourcesContent":["import Modal from \"./Modal\";\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport \"./Modal.scss\";\r\nconst Modal = ({ active, setActive, children }) => {\r\n  return (\r\n    <div\r\n      className={active ? \"modal active\" : \"modal\"}\r\n      onClick={() => setActive(false)}\r\n    >\r\n      <div\r\n        className={active ? \"modal-content active\" : \"modal-content\"}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button className=\"close-btn\" onClick={() => setActive(false)}>\r\n          x\r\n        </button>\r\n        <div className=\"modal-root\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import ContactDetails from \"./ContactDetails\";\r\n\r\nexport default ContactDetails;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport \"./ContactDetails.scss\";\r\n\r\nexport default class ContactDetails extends Component {\r\n  userValueId = 100;\r\n  state = {\r\n    addItem: false,\r\n  };\r\n  onAddItem = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        addItem: !this.state.addItem,\r\n      };\r\n    });\r\n  };\r\n  onChangeHandler = (e) => {\r\n    this.userKeyField = e.target.value;\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  setModalActive = (statusActive) => {\r\n    this.setState(({ modalActive }) => {\r\n      return {\r\n        modalActive: statusActive,\r\n      };\r\n    });\r\n  };\r\n\r\n  addContactField = (userKeyField, userValueField, id) => {\r\n    this.props.addContactValue(userKeyField, userValueField, id);\r\n  };\r\n  deleteField = (key, id) => {\r\n    this.setState(() => {\r\n      return {\r\n        modalDeleteId: id,\r\n        modalDeleteKey: key,\r\n        modalActive: true,\r\n        hideDelMod: false,\r\n      };\r\n    });\r\n  };\r\n  confirmDeleteFild = () => {\r\n    this.props.deleteÐ¡ontactValue(\r\n      this.state.modalDeleteKey,\r\n      this.state.modalDeleteId\r\n    );\r\n    this.setModalActive(false);\r\n  };\r\n  enterHandler = (e) => {\r\n    this.setState({\r\n      clearFields: false,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  editField = (key, userKey, userValue, id) => {\r\n    this.setState(() => {\r\n      return {\r\n        modalEditKey: key,\r\n        modalEditUserKey: userKey,\r\n        modalEditUserValue: userValue,\r\n        modalEditId: id,\r\n\r\n        hideDelMod: true,\r\n        modalActive: true,\r\n      };\r\n    });\r\n  };\r\n  confirmEditField = () => {\r\n    this.props.editContactValue(\r\n      this.state.modalEditKey,\r\n      this.state.modalEditUserKey,\r\n      this.state.modalEditUserValue,\r\n      this.state.modalEditId\r\n    );\r\n    this.setState(() => {\r\n      return {\r\n        clearFields: true,\r\n      };\r\n    });\r\n    this.setModalActive(false);\r\n  };\r\n\r\n  render() {\r\n    const { getContactData, storage } = this.props;\r\n    const id = getContactData.id;\r\n    const contactListItem = Object.keys(getContactData)\r\n      .filter((item) => item !== \"id\")\r\n      .map((key) => {\r\n        // if (key !== \"id\") {\r\n        return (\r\n          <div key={getContactData[key]}>\r\n            <input\r\n              type=\"text\"\r\n              name={key}\r\n              placeholder={key}\r\n              onChange={this.enterHandler}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder={getContactData[key]}\r\n              name={getContactData[key]}\r\n              onChange={this.enterHandler}\r\n            />\r\n\r\n            <button\r\n              className=\"edit-item\"\r\n              onClick={() =>\r\n                this.editField(\r\n                  key,\r\n                  this.state[key],\r\n                  this.state[getContactData[key]],\r\n                  id\r\n                )\r\n              }\r\n            >\r\n              Edit\r\n            </button>\r\n            <Modal\r\n              active={this.state.modalActive}\r\n              setActive={this.setModalActive}\r\n            >\r\n              <div className=\"\">\r\n                <p className=\"confirm-text\">Edit Confirmation</p>\r\n                <button onClick={() => this.confirmEditField()}>Edit</button>\r\n                <button onClick={() => this.setModalActive(false)}>No</button>\r\n              </div>\r\n            </Modal>\r\n            <button\r\n              className=\"add-contact\"\r\n              onClick={() => this.deleteField(key, id)}\r\n            >\r\n              Delete\r\n            </button>\r\n            <div className={this.state.hideDelMod ? \"dn\" : \"\"}>\r\n              <Modal\r\n                active={this.state.modalActive}\r\n                setActive={this.setModalActive}\r\n              >\r\n                <div className=\"\">\r\n                  <p className=\"confirm-text\">Delete confirmation</p>\r\n                  <button onClick={() => this.confirmDeleteFild()}>\r\n                    Delete\r\n                  </button>\r\n                  <button onClick={() => this.setModalActive(false)}>No</button>\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n        );\r\n        // }\r\n      });\r\n    const { userKeyField, userValueField } = this.state;\r\n    return (\r\n      <div className=\"contact-details\">\r\n        <h1 className=\"contact-details-title\">Contact Information</h1>\r\n        <button className=\"close\" onClick={() => this.props.setActive(false)}>\r\n          X\r\n        </button>\r\n\r\n        <button className=\"add-item\" onClick={this.onAddItem}>\r\n          Add field\r\n        </button>\r\n        <button\r\n          className={storage !== null ? \"step-back\" : \"dn\"}\r\n          onClick={() => this.props.cancelLastChange()}\r\n        >\r\n          Cancel last change\r\n        </button>\r\n        <ul>{contactListItem}</ul>\r\n        <div\r\n          className={this.state.addItem ? \"custom-field\" : \"custom-field dn\"}\r\n        >\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userKeyField\"\r\n              placeholder=\"..key\"\r\n              onChange={this.onChangeHandler}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"userValueField\"\r\n              placeholder=\"..value\"\r\n              onChange={this.onChangeHandler}\r\n            />\r\n            <button\r\n              className=\"add-item\"\r\n              onClick={() =>\r\n                this.addContactField(userKeyField, userValueField, id)\r\n              }\r\n            >\r\n              Ok\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ContactListItem from \"./ContactListItem\";\r\n\r\nexport default ContactListItem;\r\n","import React, { Component } from \"react\";\r\nimport \"./ContactListItem.scss\";\r\nimport ContactDetails from \"../ContactDetails\";\r\nexport default class ContactListItem extends Component {\r\n  state = {\r\n    modalActive: false,\r\n  };\r\n\r\n  setModalActive = (statusActive) => {\r\n    this.setState(({ modalActive }) => {\r\n      return {\r\n        modalActive: statusActive,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onDeleted,\r\n      addContactValue,\r\n      deleteÐ¡ontactValue,\r\n      cancelLastChange,\r\n      editContactValue,\r\n      storage,\r\n      ...contactDetails\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"contact-list-item\"\r\n          onClick={() => this.setModalActive(true)}\r\n        >\r\n          <div className=\"contact-person\">\r\n            <img\r\n              src=\"https://www.flaticon.com/svg/static/icons/svg/1077/1077114.svg\"\r\n              alt=\"person\"\r\n              className=\"contact-person-img\"\r\n            />\r\n            <p className=\"contact-person-name\">\r\n              {contactDetails.firstName} {contactDetails.lastName}\r\n            </p>\r\n          </div>\r\n          <button className=\"delete-btn\" onClick={this.props.onDeleted}>\r\n            x\r\n          </button>\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.modalActive\r\n              ? \"active contact-details-layer\"\r\n              : \"contact-details-layer \"\r\n          }\r\n        >\r\n          <div className=\"contact-details-content \">\r\n            <ContactDetails\r\n              getContactData={contactDetails}\r\n              storage={storage}\r\n              deleteÐ¡ontactValue={this.props.deleteÐ¡ontactValue}\r\n              editContactValue={editContactValue}\r\n              addContactValue={addContactValue}\r\n              cancelLastChange={cancelLastChange}\r\n              setActive={this.setModalActive}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ContactList from \"./ContactList\";\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem\";\r\n\r\nimport \"./ContactList.scss\";\r\n\r\nconst ContactList = ({\r\n  contacts,\r\n  storage,\r\n  onDeleted,\r\n  addContactValue,\r\n  deleteÐ¡ontactValue,\r\n  editContactValue,\r\n  cancelLastChange,\r\n}) => {\r\n  const contactListItem = contacts.map((item) => {\r\n    const { ...itemProps } = item;\r\n    const { id } = item;\r\n    return (\r\n      <ContactListItem\r\n        key={id}\r\n        {...itemProps}\r\n        storage={storage}\r\n        onDeleted={() => onDeleted(id)}\r\n        addContactValue={addContactValue}\r\n        deleteÐ¡ontactValue={deleteÐ¡ontactValue}\r\n        editContactValue={editContactValue}\r\n        cancelLastChange={cancelLastChange}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className=\"contact-list\">\r\n      <div className=\"container\">\r\n        <div className=\"contact-list-menu\">{contactListItem}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import ContactAddForm from \"./ContactAddForm\";\r\n\r\nexport default ContactAddForm;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport \"./ContactAddForm.scss\";\r\n\r\nexport default class ContactAddForm extends Component {\r\n  state = {\r\n    modalActive: false,\r\n    firstName: null,\r\n    lastName: null,\r\n    phone: null,\r\n    email: null,\r\n  };\r\n\r\n  onChangeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onContactAdded = () => {\r\n    const { modalActive, ...contactValues } = this.state;\r\n    this.props.addContact({ ...contactValues });\r\n    this.setModalActive(false);\r\n  };\r\n  setModalActive = (statusActive) => {\r\n    this.setState(({ modalActive }) => {\r\n      return {\r\n        modalActive: statusActive,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const children = (\r\n      <div className=\"contact-add-child\">\r\n        <p>\r\n          <label htmlFor=\"firstName\">First Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            placeholder=\"Name\"\r\n            onChange={this.onChangeHandler}\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"lastName\">Last Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={this.onChangeHandler}\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"phone\">Phone: </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            id=\"phone\"\r\n            onChange={this.onChangeHandler}\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            onChange={this.onChangeHandler}\r\n          />\r\n        </p>\r\n        <button className=\"add-contact-btn\" onClick={this.onContactAdded}>\r\n          Add Contact\r\n        </button>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"contact-add-form\">\r\n        <Modal active={this.state.modalActive} setActive={this.setModalActive}>\r\n          {children}\r\n        </Modal>\r\n        <button\r\n          className=\"add-contact\"\r\n          onClick={() => this.setModalActive(true)}\r\n        >\r\n          +\r\n        </button>\r\n        <h1 className=\"logo\">\r\n          <span>VC</span>ontacts\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.scss\";\r\nimport ContactList from \"../src/components/ContactList\";\r\nimport ContactAddForm from \"../src/components/ContactAddForm\";\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n  state = {\r\n    contactData: [\r\n      {\r\n        firstName: \"Volodymyr\",\r\n        lastName: \"Velikiy\",\r\n        phone: \"380978766813\",\r\n        email: \"test@gmail.com\",\r\n        id: 1,\r\n      },\r\n      {\r\n        firstName: \"Anatoliy\",\r\n        lastName: \"Kurcha\",\r\n        phone: \"380734080939\",\r\n        email: \"mail@gmail.com\",\r\n        id: 2,\r\n      },\r\n      {\r\n        firstName: \"Test\",\r\n        lastName: \"Crack\",\r\n        phone: \"3809999999\",\r\n        email: \"test@gmail.com\",\r\n        id: 3,\r\n      },\r\n    ],\r\n    cancelBtn: false,\r\n    storage: null,\r\n  };\r\n  deleteÐ¡ontactValue = (contactValue, contactId) => {\r\n    this.setState(({ contactData }) => {\r\n      const index = contactData.findIndex((el) => el.id === contactId);\r\n      // let operationArr = contactData[index];\r\n      let operationElem = Object.assign({}, contactData[index]);\r\n      delete operationElem[contactValue];\r\n      const newContactData = [\r\n        ...contactData.slice(0, index),\r\n        operationElem,\r\n        ...contactData.slice(index + 1),\r\n      ];\r\n      return {\r\n        contactData: newContactData,\r\n        storage: contactData[index],\r\n      };\r\n    });\r\n  };\r\n  deleteContact = (contactId) => {\r\n    this.setState(({ contactData }) => {\r\n      const index = contactData.findIndex((el) => el.id === contactId);\r\n      const newContactData = [\r\n        ...contactData.slice(0, index),\r\n        ...contactData.slice(index + 1),\r\n      ];\r\n\r\n      return {\r\n        contactData: newContactData,\r\n      };\r\n    });\r\n  };\r\n\r\n  addContact = (values) => {\r\n    this.maxId = this.maxId++;\r\n    const newContact = {\r\n      id: this.maxId++,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      phone: values.phone,\r\n      email: values.email,\r\n    };\r\n    this.setState(({ contactData }) => {\r\n      const newContactData = [...contactData, newContact];\r\n      return {\r\n        contactData: newContactData,\r\n      };\r\n    });\r\n  };\r\n  addContactValue = (userKeyField, userValueField, contactId) => {\r\n    this.setState(({ contactData }) => {\r\n      const index = contactData.findIndex((el) => el.id === contactId);\r\n      let operationElem = Object.assign({}, contactData[index]);\r\n      operationElem[userKeyField] = userValueField;\r\n      const newContactData = [\r\n        ...contactData.slice(0, index),\r\n        operationElem,\r\n        ...contactData.slice(index + 1),\r\n      ];\r\n\r\n      return {\r\n        contactData: newContactData,\r\n        storage: contactData[index],\r\n      };\r\n    });\r\n  };\r\n  editContactValue = (\r\n    editedField,\r\n    contactKeyField,\r\n    contactValueField,\r\n    contactId\r\n  ) => {\r\n    if (\r\n      (editedField !== undefined && contactKeyField !== undefined) ||\r\n      contactValueField !== undefined\r\n    ) {\r\n      this.setState(({ contactData }) => {\r\n        const index = contactData.findIndex((el) => el.id === contactId);\r\n        let operationArr = Object.assign({}, contactData[index]);\r\n\r\n        if (contactValueField !== undefined) {\r\n          operationArr[editedField] = contactValueField;\r\n        }\r\n\r\n        if (editedField !== contactKeyField && contactKeyField !== undefined) {\r\n          Object.defineProperty(\r\n            operationArr,\r\n            contactKeyField,\r\n            Object.getOwnPropertyDescriptor(operationArr, editedField)\r\n          );\r\n          delete operationArr[editedField];\r\n        }\r\n\r\n        const newContactData = [\r\n          ...contactData.slice(0, index),\r\n          operationArr,\r\n          ...contactData.slice(index + 1),\r\n        ];\r\n\r\n        return {\r\n          storage: contactData[index],\r\n\r\n          contactData: newContactData,\r\n        };\r\n      });\r\n    }\r\n  };\r\n  cancelLastChange = () => {\r\n    if (this.state.storage !== null) {\r\n      this.setState(({ storage, contactData }) => {\r\n        const index = contactData.findIndex((el) => el.id === storage.id);\r\n        const newContactData = [\r\n          ...contactData.slice(0, index),\r\n          storage,\r\n          ...contactData.slice(index + 1),\r\n        ];\r\n        return {\r\n          contactData: newContactData,\r\n          storage: null,\r\n        };\r\n      });\r\n    } else {\r\n      this.setState((state) => {\r\n        return {\r\n          cancelBtn: true,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <div className=\"app-block\">\r\n            <ContactAddForm addContact={this.addContact} />\r\n            <ContactList\r\n              addContactValue={this.addContactValue}\r\n              cancelLastChange={this.cancelLastChange}\r\n              contacts={this.state.contactData}\r\n              storage={this.state.storage}\r\n              onDeleted={this.deleteContact}\r\n              deleteÐ¡ontactValue={this.deleteÐ¡ontactValue}\r\n              editContactValue={this.editContactValue}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}